name: Foodgram

on:
  push:
    paths-ignore:
      - '**/README.md'

jobs:
  build_and_push_backend_to_docker_hub:
    name: Push backend image to Docker Hub
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push backend to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

  build_and_push_frontend_to_docker_hub:
    name: Push frontend image to Docker Hub
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push frontend to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest

  build_and_push_gateway_to_docker_hub:
    name: Push gateway image to Docker Hub
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push gateway to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./gateway
          file: ./gateway/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_gateway:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_frontend_to_docker_hub
      - build_and_push_backend_to_docker_hub
      - build_and_push_gateway_to_docker_hub
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: create docs folder
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            sudo mkdir -p foodgram/docs
      - name: copy docs via ssh to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docs/*"
          target: "foodgram/docs/"
      - name: copy files via ssh to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "infra/docker-compose-production.yml, infra/nginx.conf"
          target: "foodgram/"
      - name: remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd foodgram
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_backend
            sudo docker compose stop
            sudo docker compose rm foodgram_backend
            sudo rm .env
            sudo touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            sudo docker compose -f docker-compose-production up -d --build
            sudo docker exec -it foodgram_backend python manage.py makemigrations --noinput
            sudo docker exec -it foodgram_backend python manage.py migrate --noinput
            sudo docker exec -it foodgram_backend python manage.py collectstatic --noinput

  telegram_message:
    name: Send telegram message
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@master
      - name: send custom message with message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Деплой проекта ${{ github.workflow }} успешно выполнен!
